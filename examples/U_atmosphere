/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  13
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    inlet
    {
        // Atmospheric boundary layer inlet velocity profile
        type            atmBoundaryLayerInletVelocity;
        
        // Flow direction (wind from west to east)
        flowDir         (1 0 0);
        
        // Ground-normal direction (z-up)
        zDir            (0 0 1);
        
        // Reference velocity at reference height [m/s]
        Uref            10.0;
        
        // Reference height for velocity measurements [m]
        Zref            20.0;
        
        // Aerodynamic roughness length [m]
        // 0.0002 = smooth (sea, sand)
        // 0.03 = grassland
        // 0.1 = crops
        // 0.5 = forest
        z0              uniform 0.1;
        
        // Displacement height [m] - for urban/forest canopy
        d               uniform 0.0;
        
        // Optional: von Kármán constant (default: 0.41)
        kappa           0.41;
        
        // Optional: turbulence model constant (default: 0.09)
        Cmu             0.09;
        
        // Initialize with theoretical ABL profile
        initABL         true;
    }

    outlet
    {
        type            inletOutlet;
        inletValue      uniform (0 0 0);
        value           uniform (10 0 0);
    }

    ground
    {
        type            noSlip;
    }

    top
    {
        type            slip;
    }

    sides
    {
        type            symmetry;
    }
}

// ************************************************************************* //
